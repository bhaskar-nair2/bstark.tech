.baseModal {
	position: fixed;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	background: rgba($color: #000000, $alpha: 0.3);
	z-index: 100;
	animation: fade 0.4s 1 ease-in-out !important;

	.top {
		display: flex;
		width: inherit;
		justify-content: space-between;
		.title {
			align-self: center;
		}
	}
	&:after {
		position: fixed;
		height: 100%;
		width: 100%;
		align-self: stretch;
		display: flex;
		justify-content: center;
		align-items: center;
		background: rgba($color: #000000, $alpha: 0.3);
		z-index: 100;
		animation: fade 0.4s 1 ease-in-out;
	}
}

%content {
	display: flex;
	border-radius: $border-rad;
	flex-direction: row;
}

%baseModalSet {
	display: flex;
	flex-direction: column;
}

.roleImg--modal {
	@extend %baseModalSet;
	.content {
		@extend %content;
	}
}

.rolePoem--modal {
	@extend %baseModalSet;
	.content {
		@extend %content;
		background: white;
		padding: 30px;
	}
	.page {
		background: white;
		padding: 30px;
		p {
			font-family: $curFont;
			letter-spacing: 1.4px;
			font-size: 1.2rem;
		}
	}
}

.roleStory--modal {
	@extend %baseModalSet;
	width: 50vw;
	.content {
		@extend %content;
	}
	.pageNo {
		float: right;
	}
	.page {
		background: white;
		padding: 30px;
		p {
			font-family: $curFont;
			letter-spacing: 1.4px;
			font-size: 1.2rem;
		}
	}
}

.roleCont--modal {
	@extend %baseModalSet;
	.content {
		@extend %content;
		align-items: center;
		background: white;
		text-align: center;
		padding: 30px;
		width: 500px;
		.icn {
			// letter icon
			justify-self: center;
			color: $gray2;
			margin: 10px 0 40px 0;
		}
		form {
			display: inline-flex;
			flex-direction: column;
			justify-content: center;
			.inputBox {
				display: flex;
				margin: 10px;
				width: 400px;
				justify-content: space-between;
				.input {
					width: 300px;
				}
			}
		}
	}
}

.roleSong--modal {
	@extend %baseModalSet;
	.content {
		@extend %content;
	}
}

.crossHold {
	display: flex;
	justify-content: flex-end;
	.cross {
		background: transparent;
		border: 0;
		color: $gray1;
		cursor: pointer;
		&:focus {
			outline: 0;
		}
	}
}

.arrowHold {
	display: flex;
	.arrow {
		background: transparent;
		border: 0;
		color: $gray6;
		cursor: pointer;
		&:disabled {
			opacity: 20%;
		}
		&:focus {
			outline: 0;
		}
	}
}
